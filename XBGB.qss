/******************************************************************

    Title: XBGB
    Desc: A XBOX Game Bar like theme for OBS.
    Author: icedterminal
    Source: https://github.com/icedterminal/xbgb-obs
    License: GNU v3
    Icons: The icons in this theme are from MDL Assets. These icons
    are NOT open source. They here to keep the consistency and
    follow the chosen design language. (C) Microsoft Corporation.
    Font: The font used is Bahnschrift and is already installed.
    It comes with Windows 10. This is the font used for Game Bar.

    While Microsoft's design language is always inconsistent,
    I wanted OBS to look like the Game Bar. I feel it fit
    the purpose. I gave it my best effort. QT is limited so
    I was unable to add things like box shadow and animations.

    Here are the base colors as pulled from Game Bar:

    title bars background............rgb(0,0,0)
    general background............rgb(31,31,31)
    button background................rgb(53,53,53)
    button background hover..........rgb(73,73,73)
    button background pressed........rgb(45,45,45)
    button text..................rgb(224,224,224)
    borders and slider.......rgb(104,118,138)
    input background.........rgb(53,57,63)



******************************************************************/

OBSTheme {
    window: rgb(31,31,31);
    windowText: rgb(255, 255, 255);
    base: rgb(31,30,31);
    alternateBase: rgb(11,10,11);
    text: rgb(225,224,225);
    button: rgb(53,53,53);
    buttonText: rgb(224,224,224);
    brightText: rgb(255,255,255);

    light: rgb(88,87,88);
    mid: rgb(58,57,58);
    dark: rgb(31,30,31);
    shadow: rgb(8, 8, 8);

    highlight: rgb(104,118,138);
    highlightText: rgb(255,255,255);

    link: rgb(104,118,138);
    linkVisited: rgb(104,118,138);
}

OBSTheme::disabled {
    text: rgb(122,121,122);
    buttonText: rgb(122,121,122);
    brightText: rgb(122,121,122);
}

OBSTheme::inactive {
    highlight: rgb(48,47,48);
    highlightText: rgb(255, 255, 255);
}


/* General style */
QMainWindow {
    background-color: rgb(31,31,31);
}

QWidget {
    background-color: rgb(31,31,31);
    alternate-background-color: rgb(45,45,45);
    color: rgb(255, 255, 255);
    selection-background-color: rgb(104,118,138);
    selection-color: rgb(255,255,255);
    font-family: "Bahnschrift", "Roboto", 'Segoe UI', sans-serif; /* Absolutely NOT defining trash Arial. */
    font-size: 13px;
    font-weight: normal;
    font-style: normal;
}

* [frameShape="1"], * [frameShape="2"], * [frameShape="3"], * [frameShape="4"], * [frameShape="5"], * [frameShape="6"] {
    border: 1px solid rgb(31,30,31);
}

/* Misc */

QWidget::disabled {
    color: 2px solid rgb(200,199,200);
}

QAbstractItemView, QStackedWidget#stackedMixerArea QWidget {
    background-color: rgb(31,31,31);
}

QToolTip {
    background-color: rgb(31,31,31);
    color: rgb(255,255,255);
    border: 1px solid rgb(104,118,138);
    font-family: "Bahnschrift", "Roboto", 'Segoe UI', sans-serif; /* Absolutely NOT defining trash Arial. */
    font-size: 13px;
    padding: 6px;
}

#menubar {
    padding: 0 0 0 8px;
	margin: 0;
    background-color: rgb(31,31,31);
}

QMenuBar::item {
    background-color: rgb(31,31,31);
    color: rgb(224,224,224);
    padding: 6px 8px;
}

QMenuBar::item:hover {
    background-color: rgb(73,73,73);
    color: rgb(255,255,255);
}

QMenuBar::item:selected {
	background-color:rgb(45,45,45);
    color: rgb(255,255,255);
}

QListWidget::item,
SourceTree::item {
	padding: 3px 3px;;
    margin: 0;
	border: none;
}

SourceTree::item:hover,
QListWidget::item:hover {
	background-color: rgb(73,73,73);
    color: rgb(255,255,255);
}

SourceTree::item:selected,
QListWidget::item:selected {
	background-color: rgb(45,45,45);
    color: rgb(255,255,255);
}

QListWidget::item:selected:!active,
SourceTree::item:selected:!active {
    color: rgb(255,255,255);
    background-color: rgb(45,45,45);
}

QListWidget QLineEdit,
SourceTree QLineEdit {
    padding-top: 0px;
    padding-bottom: 0px;
    padding-right: 0;
    padding-left: 2px;
    border: none;
    border-radius: none;
}

/* Dock Widget */

QDockWidget {
	titlebar-close-icon: url('./xbgb/close.svg');
	titlebar-normal-icon: url('./xbgb/popout.svg');
}

QDockWidget::title {
    text-align: center;
    background-color: rgb(0,0,0);
}

QDockWidget::close-button, QDockWidget::float-button {
    border: 1px solid transparent;
    background: transparent;
    padding: 0px;
}

QDockWidget::close-button:hover, QDockWidget::float-button:hover {
    background: transparent;
}

QDockWidget::close-button:pressed, QDockWidget::float-button:pressed {
    padding: 1px -1px -1px 1px;
}

/* Group Box */

QGroupBox {
	border-top:none;
    border-left: none;
    border-right: none;
    border-bottom: 1px solid rgb(104,118,138);
	margin:0px;
	padding: 32px 0px 20px 0px;
}

QGroupBox::title {
	left: 5px;
	right: 0;
	top: 8px;
	padding-left: 8px;
	padding-right: 8px;
	padding-bottom: 8px;
	font-size: 14px;
    font-family: "Bahnschrift", "Roboto", 'Segoe UI', sans-serif; /* Absolutely NOT defining trash Arial. */;
    font-weight: bold;
    font-stretch: condensed;
}

/* Checkbox */

QCheckBox::indicator:unchecked {
	image: url(./xbgb/checkbox_unchecked.svg);
}

QCheckBox::indicator:checked {
	image: url(./xbgb/checkbox_checked.svg);
}

QCheckBox::indicator:checked:disabled {
	outline: none;
	image: url(./xbgb/checkbox_checked_disabled.svg);
}

QCheckBox::indicator:unchecked:disabled {
	image: url(./xbgb/checkbox_unchecked_disabled.svg);
}

/* Radio Buttons */

QRadioButton::indicator {
	width: 18px;
	height: 18px;
}

QRadioButton::indicator:unchecked {
	image: url(./xbgb/radio.svg);
}

QRadioButton::indicator:checked {
	border: none;
	outline: none;
	image: url(./xbgb/radio_selected.svg);
}

QRadioButton::indicator:unchecked:disabled {
	image: url(./xbgb/radio_disabled.svg);
}

QRadioButton::indicator:checked:disabled {
	outline: none;
	image: url(./xbgb/radio_selected_disabled.svg);
}

/* ScrollBars */

::corner {
    background-color: rgb(58,57,58);
    border: none;
}

QScrollBar:vertical {
    background-color: rgb(31, 31, 31);
    width: 12px;
    margin: 0px;
}

QScrollBar::handle:vertical {
    background-color: rgb(53,53,53);
    min-height: 20px;
    margin: 2px;
    border-radius: 4px;
    border-width: 1px;
    border: none;
}

QScrollBar::handle:vertical:hover {
    background-color: rgb(73,73,73);
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
    border: none;
    background: none;
    height: 0px;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical, QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    border: none;
    background: none;
    color: none;
}

QScrollBar:horizontal {
    background-color: rgb(31, 31, 31);
    height: 12px;
    margin: 0px;
}

QScrollBar::handle:horizontal {
    background-color: rgb(53,53,53);
    min-width: 20px;
    margin: 2px;
    border-radius: 4px;
    border-width: 1px;
    border: none;
}

QScrollBar::handle:horizontal:hover {
    background-color: rgb(73,73,73);
}

QScrollBar::add-line:horizontal, QScrollBar::sub-line:horizontal {
    border: none;
    background: none;
    width: 0px;
}

QScrollBar::left-arrow:horizontal, QScrollBar::right-arrow:horizontal, QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
    border: none;
    background: none;
    color: none;
}

/* Source Context */
#contextContainer QPushButton[themeID2=contextBarButton] {
    padding: 3px;
    margin: 0px;
}

#contextContainer QPushButton#sourcePropertiesButton {
    qproperty-icon: url(./xbgb/settings/general.svg);
}

#contextContainer QPushButton#sourceFiltersButton {
    qproperty-icon: url(./xbgb/filter.svg);
}

/* Scenes and Sources toolbar */

QToolBar {
    background-color: rgb(31, 31, 31);
    border: none;
}

QToolButton:hover {
    background-color: rgb(73,73,73);
    border-radius: none;
}

QToolButton:pressed {
    background-color: rgb(45,45,45);
    border-radius: none;
}

* [themeID="addIconSmall"] {
    qproperty-icon: url(./xbgb/plus.svg);
}

* [themeID="removeIconSmall"] {
    qproperty-icon: url(./xbgb/minus.svg);
}

* [themeID="propertiesIconSmall"] {
    qproperty-icon: url(./xbgb/settings/general.svg);
}

* [themeID="configIconSmall"] {
    qproperty-icon: url(./xbgb/settings/general.svg);
}

* [themeID="refreshIconSmall"] {
    qproperty-icon: url(./xbgb/refresh.svg);
}

* [themeID="upArrowIconSmall"] {
    qproperty-icon: url(./xbgb/up.svg);
}

* [themeID="downArrowIconSmall"] {
    qproperty-icon: url(./xbgb/down.svg);
}

* [themeID="pauseIconSmall"] {
    qproperty-icon: url(./xbgb/media-pause.svg);
}

#scenesFrame,
#sourcesFrame {
    margin: -20px;
	padding: 0;
}


/* Tab Widget */

QTabWidget::pane { /* The tab widget frame */
    border-top: 1px solid rgb(104,118,138);
}

QTabWidget::tab-bar {
    alignment: left;
}

QTabBar::tab {
    background-color: rgb(31,30,31);
    border: none;
    padding: 5px 15px;
    min-width: 50px;
    margin: 0px 0px;
}

QTabBar::tab:top {
    border-bottom: 1px transparent;
}

QTabBar::tab:bottom {
    padding-top: 1px;
    margin-bottom: 4px;
    height: 14px;
}

QTabBar::tab:selected {
    background-color: rgb(31,30,31);
    border-bottom: 2px solid rgb(104,118,138);
}

QTabBar::tab:hover {
    background-color: rgb(73,73,73);
}

QTabBar::tab:pressed {
    background-color: rgb(45,45,45);
}


/* ComboBox 

    title bars background............rgb(0,0,0)
    general background............rgb(31,31,31)
    button background................rgb(53,53,53)
    button background hover..........rgb(73,73,73)
    button background pressed........rgb(45,45,45)
    button text...........rgb(224,224,224)
    borders and slider.......rgb(104,118,138)
    input background.........rgb(53,57,63)


*/

QComboBox {
    background-color: rgb(53,53,53);
    padding: 2px 2px 2px 10px;
    border:1px solid rgb(53,53,53);
    color: rgb(255,255,255);
}

QComboBox:hover {
    background-color: rgb(73,73,73);
}

QComboBox::drop-down {
    width: 20px;
    border: none;
}

QComboBox::down-arrow {
    qproperty-alignment: AlignTop;
    image: url(./xbgb/updown.svg);
    width: 100%;
    border:0px;
}

QComboBox:on {
    background-color: rgb(45,45,45)
}

QComboBox:editable {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
}

QComboBox::drop-down:editable {
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow:editable {
    qproperty-alignment: AlignTop;
    image: url(./xbgb/down.svg);
    width: 8%;
}


/* Textedits etc */
/* An easily legible mono font works best here */
QLineEdit, QTextEdit, QPlainTextEdit {
    background-color: rgb(53,57,63);
    border: 2px solid rgb(104,118,138);
    border-radius: 0px;
    padding: 0px 0px 0px 6px;
}

QSpinBox, QDoubleSpinBox, QLineEdit, QTextEdit, QPlainTextEdit {
	font-family: 'Cascadia Code', 'Cascadia Mono', 'Consolas', 'Courier New', Courier, monospace;
}

/* Spinbox and doubleSpinbox */

QSpinBox, QDoubleSpinBox {
    background-color: rgb(53,57,63);
    border: 2px solid rgb(104,118,138);
    border-radius: 0px;
    margin: 0px 20px 0px 0px;
    padding: 0px 0px 0px 6px;
}

QSpinBox::up-button, QDoubleSpinBox::up-button {
    subcontrol-origin: margin;
    subcontrol-position: top right; /* position at the top right corner */

    background-color: rgb(53,57,63);
    border: 1px solid rgb(31,30,31);
    border-radius: 0px;
    border-width: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-width: 0;
}

QSpinBox::down-button, QDoubleSpinBox::down-button {
    subcontrol-origin: margin;
    subcontrol-position: bottom right; /* position at the top right corner */
    background-color: rgb(76,76,76);
    border: 1px solid rgb(31,30,31);
    border-radius: 0px;
    border-width: 0;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-top-width: 0;
}

QSpinBox::up-button:hover, QSpinBox::down-button:hover, QDoubleSpinBox::up-button:hover, QDoubleSpinBox::down-button:hover {
    background-color: rgb(122,121,122);
}

QSpinBox::up-button:pressed, QSpinBox::down-button:pressed, QDoubleSpinBox::up-button:pressed, QDoubleSpinBox::down-button:pressed {
    background-color: rgb(58,57,58);
}

QSpinBox::up-button:disabled, QSpinBox::up-button:off, QSpinBox::down-button:disabled, QSpinBox::down-button:off {
    background-color: rgb(58,57,58);
}

QDoubleSpinBox::up-button:disabled, QDoubleSpinBox::up-button:off, QDoubleSpinBox::down-button:disabled, QDoubleSpinBox::down-button:off {
    background-color: rgb(58,57,58);
}

QSpinBox::up-arrow, QDoubleSpinBox::up-arrow {
    image: url(./xbgb/up.svg);
    width: 100%;
}

QSpinBox::down-arrow, QDoubleSpinBox::down-arrow {
    image: url(./xbgb/down.svg);
    width: 100%;
}


/* Buttons */

QPushButton {
    color: rgb(224,224,224);
    background-color: rgb(53,53,53);
    border: none;
    border-radius: 0px;
    padding: 4px;
    padding-left: 20px;
    padding-right: 20px;
}

QPushButton::flat {
    background-color: rgb(53,53,53);
}

QPushButton:hover {
    background-color: rgb(73,73,73);
}

QPushButton:pressed {
    background-color: rgb(45,45,45);
}

QPushButton:checked {
    background-color: rgb(122,121,122);
}

QPushButton::menu-indicator {
    image: url(./xbgb/down.svg);
    subcontrol-position: right;
    subcontrol-origin: padding;
    width: 25px;
}

/* Sliders */

QSlider::groove:horizontal {
    background-color: rgb(121,121,121);
    height: 2px;
    border: none;
    border-radius: 0px;
}

QSlider::handle:horizontal {
    background-color: rgb(104,118,138);
    border: none;
    border-radius: 2px;
    height: 14px;
    width: 4px;
    margin: -8px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
}

QSlider::handle:horizontal:pressed {
    background-color: #d2d2d2;
}

QSlider::sub-page:horizontal {
    background-color: rgb(104,118,138);
    border-radius: 0px;
}

QSlider::sub-page:horizontal:disabled {
    background-color: rgb(50, 49, 50);
    border-radius: 0px;
}

QSlider::groove:vertical {
    background-color: rgb(76,76,76);
    width: 4px;
    border: none;
    border-radius: 0px;
}

QSlider::handle:vertical {
    background-color: rgb(104,118,138);
    border: none;
    border-radius: 0px;
    width: 10px;
    height: 18px;
    margin: 0 -3px; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
}

QSlider::handle:vertical:pressed {
    background-color: rgb(104,118,138);
    border: none;
}

QSlider::add-page:vertical {
    background-color: rgb(42,130,218);
    border-radius: 0px;
}

QSlider::add-page:vertical:disabled {
    background-color: rgb(50, 49, 50);
    border-radius: 0px;
}

QSlider::handle:hover {
    background-color: rgb(104,118,138);
    border: none;
}

QSlider::handle:disabled {
    background-color: rgb(122,121,122);
    border: none;
}

/* Volume Control */

VolumeMeter {
    qproperty-backgroundNominalColor: rgb(38, 127, 38);
    qproperty-backgroundWarningColor: rgb(127, 127, 38);
    qproperty-backgroundErrorColor: rgb(127, 38, 38);
    qproperty-foregroundNominalColor: rgb(76, 255, 76);
    qproperty-foregroundWarningColor: rgb(255, 255, 76);
    qproperty-foregroundErrorColor: rgb(255, 76, 76);
    qproperty-magnitudeColor: rgb(0, 0, 0);
    qproperty-majorTickColor: rgb(225,224,225);
    qproperty-minorTickColor: rgb(122,121,122);
}


/* Status Bar */

QStatusBar::item {
    border: none;
}

/* Table View */

QTableView {
    gridline-color: rgb(88,87,88);
}

QHeaderView::section {
    background-color: rgb(58,57,58);
    color: rgb(225,224,225);
    border: 1px solid rgb(31,30,31);;
    border-radius: 0px;
}

/* Mute CheckBox */

MuteCheckBox {
    outline: none;
}

MuteCheckBox::indicator:checked {
    image: url(./xbgb/mute_widget.svg);
}

MuteCheckBox::indicator:unchecked {
    image: url(./xbgb/unmute_widget.svg);
}

OBSHotkeyLabel[hotkeyPairHover=true] {
    color: red;
}

/* Pause */
PauseCheckBox {
    outline: none;
}

PauseCheckBox::indicator:checked {
    image: url(:/res/images/media-pause.svg);
}

PauseCheckBox::indicator:unchecked {
    image: url(:/res/images/media-play.svg);
}

/* Group Collapse Checkbox */

SourceTreeSubItemCheckBox {
    background: transparent;
    outline: none;
}

SourceTreeSubItemCheckBox::indicator {
    width: 10px;
    height: 10px;
}

SourceTreeSubItemCheckBox::indicator:checked {
    image: url(./xbgb/expand.svg);
}

SourceTreeSubItemCheckBox::indicator:unchecked {
    image: url(./xbgb/down.svg);
}


/* Label warning/error */

QLabel#warningLabel {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

QLabel#errorLabel {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="warning"] {
    color: rgb(192, 128, 0);
    font-weight: bold;
}

* [themeID="error"] {
    color: rgb(192, 0, 0);
    font-weight: bold;
}

* [themeID="good"] {
    color: rgb(0, 192, 0);
    font-weight: bold;
}

/* About dialog */

* [themeID="aboutName"] {
    font-size: 36px;
    font-weight: bold;
}

* [themeID="aboutVersion"] {
    font-size: 16px;
    margin-bottom: 20px;
}

* [themeID="aboutInfo"] {
    margin-bottom: 20px;
}

* [themeID="aboutHLayout"] {
    background-color: rgb(31, 30, 31);
}

/* Preview background color */

OBSQTDisplay {
	qproperty-displayBackgroundColor: rgb(31, 31, 31);
}

/* Preview/Program labels */

* [themeID="previewProgramLabels"] {
    font-size: 18px;
    font-weight: bold;
    color: rgb(122,121,122);
}

/* Settings Icons */

OBSBasicSettings {
    qproperty-generalIcon: url(./xbgb/settings/general.svg);
    qproperty-streamIcon: url(./xbgb/settings/stream.svg);
    qproperty-outputIcon: url(./xbgb/settings/output.svg);
    qproperty-audioIcon: url(./xbgb/settings/audio.svg);
    qproperty-videoIcon: url(./xbgb/settings/video.svg);
    qproperty-hotkeysIcon: url(./xbgb/settings/hotkeys.svg);
    qproperty-advancedIcon: url(./xbgb/settings/advanced.svg);
}

OBSBasicSettings {
    padding-top: 5px;
    padding-bottom: 5px;
}

/* Locked CheckBox */

LockedCheckBox {
    outline: none;
    background: transparent;
}

LockedCheckBox::indicator:checked {
    image: url(./xbgb/locked.svg);
}

LockedCheckBox::indicator:unchecked {
    image: url(:res/images/unlocked.svg);
}

/* Visibility CheckBox */

VisibilityCheckBox {
    outline: none;
    background: transparent;
}

VisibilityCheckBox::indicator:checked {
    image: url(./xbgb/visible.svg);
}

VisibilityCheckBox::indicator:unchecked {
    image: url(:res/images/invisible.svg);
}

* [themeID="trashIcon"] {
    qproperty-icon: url(./xbgb/trash.svg);
}

* [themeID="revertIcon"] {
    qproperty-icon: url(./xbgb/revert.svg);
}

QPushButton#extraPanelDelete {
    background-color: rgb(31, 30, 31);
}

QPushButton#extraPanelDelete:hover {
    background-color: rgb(122,121,122);
}

QPushButton#extraPanelDelete:pressed {
    background-color: rgb(31,30,31);
}

/* Source Icons */

OBSBasic {
    qproperty-imageIcon: url(./xbgb/sources/image.svg);
    qproperty-colorIcon: url(./xbgb/sources/brush.svg);
    qproperty-slideshowIcon: url(./xbgb/sources/slideshow.svg);
    qproperty-audioInputIcon: url(./xbgb/sources/microphone.svg);
    qproperty-audioOutputIcon: url(./xbgb/settings/audio.svg);
    qproperty-desktopCapIcon: url(./xbgb/settings/video.svg);
    qproperty-windowCapIcon: url(./xbgb/sources/window.svg);
    qproperty-gameCapIcon: url(./xbgb/sources/gamepad.svg);
    qproperty-cameraIcon: url(./xbgb/sources/camera.svg);
    qproperty-textIcon: url(./xbgb/sources/text.svg);
    qproperty-mediaIcon: url(./xbgb/sources/media.svg);
    qproperty-browserIcon: url(./xbgb/sources/globe.svg);
    qproperty-groupIcon: url(./xbgb/sources/group.svg);
    qproperty-sceneIcon: url(./xbgb/sources/scene.svg);
    qproperty-defaultIcon: url(./xbgb/sources/default.svg);
}

/* Scene Tree */

SceneTree {
    qproperty-gridItemWidth: 150;
	qproperty-gridItemHeight: 27;
}

*[gridMode="true"] SceneTree::item {
    color: rgb(225,224,225);
    background-color: rgb(31,31,31);
    border: none;
    border-radius: 0px;
    padding: 4px;
	padding-left: 10px;
	padding-right: 10px;
	margin: 1px;
}

*[gridMode="true"] SceneTree::item:selected {
    background-color: rgb(122,121,122);
}

*[gridMode="true"] SceneTree::item:hover {
    background-color: rgb(122,121,122);
}

*[gridMode="true"] SceneTree::item:pressed {
    background-color: rgb(31,30,31);
}

*[gridMode="true"] SceneTree::item:checked {
    background-color: rgb(122,121,122);
}

/* Save icon */

* [themeID="replayIconSmall"] {
    qproperty-icon: url(./xbgb/save.svg);
}

/* Studio Mode T-Bar */

QSlider[themeID="tBarSlider"] {
	height: 24px;
}

QSlider::groove:horizontal[themeID="tBarSlider"] {
	border: 1px solid #4c4c4c;
	height: 5px;
	background: rgb(31,30,31);
}

QSlider::sub-page:horizontal[themeID="tBarSlider"] {
	background: rgb(31,30,31);;
	border: 1px solid #4c4c4c;
}

QSlider::handle:horizontal[themeID="tBarSlider"] {
	background-color: #d2d2d2;
	width: 12px;
	height: 24px;
	margin: -24px 0px;
}

/* Media icons */

* [themeID="playIcon"] {
    qproperty-icon: url(./xbgb/media/media_play.svg);
}

* [themeID="pauseIcon"] {
    qproperty-icon: url(./xbgb/media/media_pause.svg);
}

* [themeID="restartIcon"] {
    qproperty-icon: url(./xbgb/media/media_restart.svg);
}

* [themeID="stopIcon"] {
    qproperty-icon: url(./xbgb/media/media_stop.svg);
}

* [themeID="nextIcon"] {
    qproperty-icon: url(./xbgb/media/media_next.svg);
}

* [themeID="previousIcon"] {
    qproperty-icon: url(./xbgb/media/media_previous.svg);
}
